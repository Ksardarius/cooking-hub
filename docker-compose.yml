version: "3.9"
services:
  recipes-api:
    #image: ${REGISTRY:-eshop}/catalog.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: src/Recipes.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - BookStoreDatabase__ConnectionString=mongodb://admin:admin@host.docker.internal:27017
      - BookStoreDatabase__DatabaseName=BookStore
      - BookStoreDatabase__BooksCollectionName=Books

      - ConnectionString=${ESHOP_AZURE_CATALOG_DB:-Server=sqldata;Database=Microsoft.eShopOnContainers.Services.CatalogDb;User Id=sa;Password=Pass@word}
      - PicBaseUrl=${ESHOP_STORAGE_CATALOG_URL}
      - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME}
      - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD}
      - AzureStorageAccountName=${ESHOP_AZURE_STORAGE_CATALOG_NAME}
      - AzureStorageAccountKey=${ESHOP_AZURE_STORAGE_CATALOG_KEY}
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - GRPC_PORT=81
      - PORT=80
      - PATH_BASE=/recipes-api
    ports:
      - "5101:8080"
      - "9101:81"
  frontend-prod:
   build:
     context: src/WebApp
     dockerfile: Dockerfile
     args:
       - VITE_APP_BACKEND_ADDRESS=https://localhost/api/prod
   container_name: frontend-prod
   restart: always
   ports:
     - 3001:3001
   networks:
     - network

  cookinghubapigw:
    image: envoyproxy/envoy:v1.11.1
    volumes:
      - ./src/ApiGateways/Envoy/cookinghub:/etc/envoy
      - ./cert:/etc/dev/cert
    ports:
    - "5202:80"
    - "5203:443"
    - "15202:8001"
    
networks:
 network: